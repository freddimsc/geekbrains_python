# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и
# отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

class Check_Num:
    def __init__(self, *args):
        self.list_num = []

    def input_num(self):
        while True:
            try:
                num = int(input('Введите значения : '))
                self.list_num.append(num)
                print(f'Список Чисел- {self.list_num} \n ')
            except:
                print(f"Недопустимое значение")
                question = input(f'Для продолжения нажмите Enter\n   Если хотите закончить, наберите "stop"!')
                if question == '':
                    print(input_num())
                else:
                    if question == 'stop':
                        return f'The end!'

numbers = Check_Num()
print(numbers.input_num())