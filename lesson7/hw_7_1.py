#1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__())
# , который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции
# сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки
# первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.


class Matrix:
    def __init__(self, my_matrix):
        self.my_matrix = my_matrix

    def __str__(self):
        return '\n'.join(map(str, self.my_matrix))

    def __add__(self, other):
        result = []
        for sublist in zip(self.my_matrix,other.my_matrix):
            temp = []
            for numbers in zip(sublist[0], sublist[1]):
                temp.append(sum(numbers))
            result.append(temp)
        self.my_matrix = result
        return Matrix.__str__(self)

m_1 = Matrix([[9, 0, 6], [5, 5, 3], [6, 1, -1], [5, 1, 4]])
m_2 = Matrix([[5, 0, 2, 3], [-2, 0, 2, 9], [9, 2, 7, 8], [2, 1, 7, 6]])
m_3 = Matrix([[3, 0, 2], [-2, 0, 2], [7, 2, 7],[2, 7, 7],[5, 0, 2], [-2, 0, 2], [7, 2, 7], [2, 7, 7]])
print(m_1 + m_3)
